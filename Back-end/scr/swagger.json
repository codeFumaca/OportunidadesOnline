{
    "openapi": "3.0.0",
    "info": {
        "title": "Breaking News API Documentation",
        "description": "In this documentation you will be able to consult the API end-points and also test all available routes. Do not forget to register and carry out the authorization.",
        "contact": {
            "email": "code.fumaca@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local server"
        }
    ],
    "paths": {
        "/user/": {
            "post": {
                "summary": "Create a new user",
                "description": "Route resposible for creating a new user",
                "tags": [ "Users" ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "Users": {
                                    "value": {
                                        "name": "Débora Tânia Sebastiana Peixoto",
                                        "email": "debora-peixoto83@valedesign.com.br",
                                        "password": "MinhaSenha",
                                        "cep": "78120-480",
                                        "telefone": "(65) 3924-2812"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "400": {
                            "description": "Not Found"
                        },
                        "201": {
                            "description": "Created",
                            "content": {
                                "application/json": {
                                    "schemma": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Search all users",
                "description": "Route responsible for fetching all users",
                "tags": [
                    "Users"
                ],
                "security": [ { "bearerAuth": [] } ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/": {
            "get": {
                "summary": "Search user by id",
                "description": "Route responsible for searching for user by id",
                "tags": ["Users"],
                "security": [{ "bearerAuth": [] }],
                "parameters": [
                  {
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "User ID",
                    "required": true
                  }
                ],
                "responses": {
                  "401": {
                    "description": "Unauthorized"
                  },
                  "400": {
                    "description": "Not Found"
                  },
                  "200": {
                    "description": "OK",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
        },
        "/user/{id}": {},
        "/auth": {},
        "/news/": {},
        "/news": {},
        "/news/top": {},
        "/news/search": {},
        "/news/byUser": {},
        "/news/{id}": {},
        "/news/{id}": {},
        "/news/{id}": {},
        "/news/like/{id}": {},
        "/news/comment/{id}": {},
        "/news/comment/{id}/{id}": {}
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "cep": {
                        "type": "string"
                    },
                    "telefone": {
                        "type": "string"
                    },
                    "createAt": {
                        "type": "date"
                    }
                }
            },
            "News": {
                "type": "object",
                "properties": {
                    "tittle": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "author": {
                        "type": "object"
                    },
                    "likes": {
                        "type": "number"
                    },
                    "comments": {
                        "type": "array"
                    },
                    "createAt": {
                        "type": "date"
                    }
                }
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}